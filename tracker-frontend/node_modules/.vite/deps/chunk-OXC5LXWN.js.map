{
  "version": 3,
  "sources": ["../../vuetify/src/composables/forwardRefs.ts"],
  "sourcesContent": ["import type { ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<T, P extends string> = [Extract<keyof T, `${P}${any}`>] extends [never] ? T : Omit<T, `${P}${any}`>\n\ntype OmitProps<T> = T extends { $props: any } ? Omit<T, keyof T['$props']> : never\n\nfunction getDescriptor (obj: any, key: PropertyKey) {\n  let currentObj = obj\n  while (currentObj) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(currentObj, key)\n    if (descriptor) return descriptor\n    currentObj = Object.getPrototypeOf(currentObj)\n  }\n  return undefined\n}\n\nexport function forwardRefs<T extends {}, U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit'> | undefined>[]> (\n  target: T,\n  ...refs: U\n): T & UnionToIntersection<{ [K in keyof U]: OmitPrefix<OmitProps<NonNullable<UnwrapRef<U[K]>>>, '$'> }[number]> {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = getDescriptor(ref.value, key) ?? ('_' in ref.value ? getDescriptor(ref.value._?.setupState, key) : undefined)\n        if (descriptor) return descriptor\n      }\n\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = getDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n\n      return undefined\n    },\n  }) as any\n}\n"],
  "mappings": ";AAGA,IAAMA,OAAOC,OAAO,gBAAgB;AAOpC,SAASC,cAAeC,KAAUC,KAAkB;AAClD,MAAIC,aAAaF;AACjB,SAAOE,YAAY;AACjB,UAAMC,aAAaC,QAAQC,yBAAyBH,YAAYD,GAAG;AACnE,QAAIE;AAAY,aAAOA;AACvBD,iBAAaI,OAAOC,eAAeL,UAAU;EAC/C;AACA,SAAOM;AACT;AAEO,SAASC,YACdC,QAE+G;AAAA,WAAA,OAAA,UAAA,QAD5GC,OAAI,IAAA,MAAA,OAAA,IAAA,OAAA,IAAA,CAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAJA,SAAI,OAAA,CAAA,IAAA,UAAA,IAAA;EAAA;AAEND,SAAeb,IAAI,IAAIc;AAExB,SAAO,IAAIC,MAAMF,QAAQ;IACvBG,IAAKH,SAAQT,KAAK;AAChB,UAAIG,QAAQU,IAAIJ,SAAQT,GAAG,GAAG;AAC5B,eAAOG,QAAQS,IAAIH,SAAQT,GAAG;MAChC;AACA,iBAAWc,OAAOJ,MAAM;AACtB,YAAII,IAAIC,SAASZ,QAAQU,IAAIC,IAAIC,OAAOf,GAAG,GAAG;AAC5C,gBAAMgB,MAAMb,QAAQS,IAAIE,IAAIC,OAAOf,GAAG;AACtC,iBAAO,OAAOgB,QAAQ,aAClBA,IAAIC,KAAKH,IAAIC,KAAK,IAClBC;QACN;MACF;IACF;IACAZ,yBAA0BK,SAAQT,KAAK;AArC3C;AAsCM,YAAME,aAAaC,QAAQC,yBAAyBK,SAAQT,GAAG;AAC/D,UAAIE;AAAY,eAAOA;AAGvB,UAAI,OAAOF,QAAQ,YAAYA,IAAIkB,WAAW,IAAI;AAAG;AAGrD,iBAAWJ,OAAOJ,MAAM;AACtB,YAAI,CAACI,IAAIC;AAAO;AAChB,cAAMb,cAAaJ,cAAcgB,IAAIC,OAAOf,GAAG,MAAM,OAAOc,IAAIC,QAAQjB,eAAcgB,SAAIC,MAAMI,MAAVL,mBAAaM,YAAYpB,GAAG,IAAIO;AACtH,YAAIL;AAAY,iBAAOA;MACzB;AAGA,iBAAWY,OAAOJ,MAAM;AACtB,cAAMW,YAAYP,IAAIC,SAAUD,IAAIC,MAAcnB,IAAI;AACtD,YAAI,CAACyB;AAAW;AAChB,cAAMC,QAAQD,UAAUE,MAAK;AAC7B,eAAOD,MAAME,QAAQ;AACnB,gBAAMV,OAAMQ,MAAMG,MAAK;AACvB,gBAAMvB,cAAaJ,cAAcgB,KAAIC,OAAOf,GAAG;AAC/C,cAAIE;AAAY,mBAAOA;AACvB,gBAAMmB,aAAYP,KAAIC,SAAUD,KAAIC,MAAcnB,IAAI;AACtD,cAAIyB;AAAWC,kBAAMI,KAAK,GAAGL,UAAS;QACxC;MACF;AAEA,aAAOd;IACT;EACF,CAAC;AACH;",
  "names": ["Refs", "Symbol", "getDescriptor", "obj", "key", "currentObj", "descriptor", "Reflect", "getOwnPropertyDescriptor", "Object", "getPrototypeOf", "undefined", "forwardRefs", "target", "refs", "Proxy", "get", "has", "ref", "value", "val", "bind", "startsWith", "_", "setupState", "childRefs", "queue", "slice", "length", "shift", "push"]
}

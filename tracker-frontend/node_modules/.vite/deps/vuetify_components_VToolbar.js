import {
  VToolbar,
  VToolbarTitle
} from "./chunk-WHFKMOYD.js";
import "./chunk-AILX25EV.js";
import {
  makeVariantProps
} from "./chunk-RGP2W5LZ.js";
import "./chunk-VXEZBKZ2.js";
import "./chunk-LHA5OU57.js";
import "./chunk-KGY7RG2Q.js";
import "./chunk-2XJQD6MG.js";
import "./chunk-POT3A7SL.js";
import "./chunk-7BPRDYOW.js";
import "./chunk-W4V7U7M7.js";
import "./chunk-6OAAM5FX.js";
import "./chunk-VEEUTK3Z.js";
import "./chunk-Q4EEIQJM.js";
import "./chunk-QNK2QJHO.js";
import "./chunk-UCAWGLPF.js";
import {
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-Y26IG7HO.js";
import {
  createBaseVNode,
  normalizeClass,
  normalizeStyle,
  toRef
} from "./chunk-WRYKAXUK.js";
import "./chunk-6TJCVOLN.js";

// node_modules/vuetify/lib/components/VToolbar/VToolbarItems.js
var makeVToolbarItemsProps = propsFactory({
  ...makeComponentProps(),
  ...makeVariantProps({
    variant: "text"
  })
}, "VToolbarItems");
var VToolbarItems = genericComponent()({
  name: "VToolbarItems",
  props: makeVToolbarItemsProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: toRef(() => props.color),
        height: "inherit",
        variant: toRef(() => props.variant)
      }
    });
    useRender(() => {
      var _a;
      return createBaseVNode("div", {
        "class": normalizeClass(["v-toolbar-items", props.class]),
        "style": normalizeStyle(props.style)
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});
export {
  VToolbar,
  VToolbarItems,
  VToolbarTitle
};
//# sourceMappingURL=vuetify_components_VToolbar.js.map
